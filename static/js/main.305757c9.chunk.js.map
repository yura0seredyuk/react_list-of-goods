{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","map","name","index","id","length","App","state","active","isReversed","sortBy","defaultLength","showList","setState","prevState","reverse","reset","limit","props","target","value","sortAlphabetically","sortByLength","this","copyGoodsFromServer","filter","good","sort","prev","next","localeCompare","className","type","onClick","onChange","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UACAC,KAAI,SAACC,EAAMC,GAAP,MAAkB,CACtBD,OACAE,GAAID,EAAQ,EACZE,OAAQH,EAAKG,YAyHAC,E,4MArHbC,MAAQ,CACNC,QAAQ,EACRC,YAAY,EACZC,OAAQ,KACRC,cAAe,G,EAGjBC,SAAW,WACT,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAAEN,QAASM,EAAUN,Y,EAGnDO,QAAU,WACR,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BL,YAAaK,EAAUL,gB,EAI3BO,MAAQ,WACN,EAAKH,SAAU,CACbJ,YAAY,EACZC,OAAQ,KACRC,cAAe,K,EAInBM,MAAQ,SAACC,GAAW,IACVC,EAAWD,EAAXC,OAER,EAAKN,SAAU,CACbF,cAAeQ,EAAOC,S,EAI1BC,mBAAqB,WACnB,EAAKR,SAAS,CAAEH,OAAQ,U,EAG1BY,aAAe,WACb,EAAKT,SAAS,CAAEH,OAAQ,Y,4CAG1B,WAAU,IAAD,EAC+Ca,KAAKhB,MAAnDC,EADD,EACCA,OAAQC,EADT,EACSA,WAAYC,EADrB,EACqBA,OAAQC,EAD7B,EAC6BA,cAE9Ba,EAAsB,YAAIxB,GAAiByB,QAC/C,SAAAC,GAAI,OAAIA,EAAKrB,QAAUM,KAmBzB,OAhBAa,EAAoBG,MAAK,SAACC,EAAMC,GAC9B,OAAQnB,GACN,IAAK,KACL,IAAK,SACH,OAAOkB,EAAKlB,GAAUmB,EAAKnB,GAC7B,IAAK,OACH,OAAOkB,EAAKlB,GAAQoB,cAAcD,EAAKnB,IACzC,QACE,OAAO,MAITD,GACFe,EAAoBT,UAIpB,yBAAKgB,UAAU,OACb,qCACA,4BAAQC,KAAK,SAASC,QAASV,KAAKX,UAApC,aAIA,yBAAKmB,UAAS,UAAKvB,EAAS,GAAK,WAC/B,4BACEY,MAAOT,EACPuB,SAAUX,KAAKN,OAEf,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,uCAGF,4BAAQe,KAAK,SAASC,QAASV,KAAKR,SAApC,WAIA,4BAAQiB,KAAK,SAASC,QAASV,KAAKF,oBAApC,uBAIA,4BAAQW,KAAK,SAASC,QAASV,KAAKD,cAApC,kBAIA,4BAAQU,KAAK,SAASC,QAASV,KAAKP,OAApC,UAKF,wBAAIe,UAAS,UAAKvB,EAAS,GAAK,WAC7BgB,EAAoBvB,KAAI,SAAAyB,GAAI,OAC3B,wBAAIS,IAAKT,EAAKtB,IACXsB,EAAKxB,e,GA7GFkC,IAAMC,WChBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.305757c9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n].map((name, index) => ({\n  name,\n  id: index + 1,\n  length: name.length,\n}));\n\nclass App extends React.Component {\n  state = {\n    active: false,\n    isReversed: false,\n    sortBy: 'id',\n    defaultLength: 1,\n  };\n\n  showList = () => {\n    this.setState(prevState => ({ active: !prevState.active }));\n  }\n\n  reverse = () => {\n    this.setState(prevState => ({\n      isReversed: !prevState.isReversed,\n    }));\n  }\n\n  reset = () => {\n    this.setState(({\n      isReversed: false,\n      sortBy: 'id',\n      defaultLength: 1,\n    }));\n  }\n\n  limit = (props) => {\n    const { target } = props;\n\n    this.setState(({\n      defaultLength: target.value,\n    }));\n  }\n\n  sortAlphabetically = () => {\n    this.setState({ sortBy: 'name' });\n  }\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  }\n\n  render() {\n    const { active, isReversed, sortBy, defaultLength } = this.state;\n\n    const copyGoodsFromServer = [...goodsFromServer].filter(\n      good => good.length >= defaultLength,\n    );\n\n    copyGoodsFromServer.sort((prev, next) => {\n      switch (sortBy) {\n        case 'id':\n        case 'length':\n          return prev[sortBy] - next[sortBy];\n        case 'name':\n          return prev[sortBy].localeCompare(next[sortBy]);\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      copyGoodsFromServer.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        <button type=\"button\" onClick={this.showList}>\n          Show list\n        </button>\n\n        <div className={`${active ? '' : 'active'}`}>\n          <select\n            value={defaultLength}\n            onChange={this.limit}\n          >\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n            <option>5</option>\n            <option>6</option>\n            <option>7</option>\n            <option>8</option>\n            <option>9</option>\n            <option>10</option>\n          </select>\n\n          <button type=\"button\" onClick={this.reverse}>\n            Reverse\n          </button>\n\n          <button type=\"button\" onClick={this.sortAlphabetically}>\n            Sort alphabetically\n          </button>\n\n          <button type=\"button\" onClick={this.sortByLength}>\n            Sort by length\n          </button>\n\n          <button type=\"button\" onClick={this.reset}>\n            Reset\n          </button>\n        </div>\n\n        <ul className={`${active ? '' : 'active'}`}>\n          {copyGoodsFromServer.map(good => (\n            <li key={good.id}>\n              {good.name}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}